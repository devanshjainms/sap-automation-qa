# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---
# /*---------------------------------------------------------------------------
# |                    sapcontrol commands to validate scs                    |
# +--------------------------------------------------------------------------*/
- name:                                 "Test Setup Tasks"
  ansible.builtin.include_tasks:        "roles/misc/tasks/test-case-setup.yml"
  run_once:                             true

# /*---------------------------------------------------------------------------
# |                          Pre Validations                                  |
# +--------------------------------------------------------------------------*/
- name:                                 "Pre Validations: SCS Nodes"
  ansible.builtin.include_tasks:        "roles/misc/tasks/pre-validations-scs.yml"

# /*---------------------------------------------------------------------------
# |                          Test Execution                                   |
# +--------------------------------------------------------------------------*/
- name:                                 "Test Execution: SAPControl Config"
  become:                               true
  when:                                 pre_validations_status == "PASSED" and (ansible_os_family | upper) == "SUSE"
  block:
    - name:                             "Test Execution: Run sapcontrol command"
      when:                             ansible_hostname == cluster_status_pre.ascs_node
      become:                           true
      block:
        - name:                         "Test Execution: Start timer"
          ansible.builtin.set_fact:
            test_execution_start:       "{{ now(utc=true, fmt='%Y-%m-%d %H:%M:%S') }}"
            test_execution_hostname:    "{{ hostvars[cluster_status_pre.ascs_node].ansible_hostname }}"

        - name:                         "Test Execution: Run sapcontrol commands {{ sapcontrol_method }}"
          become:                       true
          become_user:                  "{{ sap_sid | lower }}adm"
          ansible.builtin.shell:        sapcontrol -nr {{ scs_instance_number }} -function {{ sapcontrol_method }}
          environment:
            PATH:                       /usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/sap/{{ sap_sid | upper }}/SYS/exe/uc/linuxx86_64:/usr/sap/{{ sap_sid | upper }}/SYS/exe/run:/home/{{ sap_sid | lower }}adm
            DIR_LIBRARY:                /usr/sap/{{ sap_sid | upper }}/SYS/exe/run
            LD_LIBRARY_PATH:            /usr/sap/{{ sap_sid | upper }}/SYS/exe/run:/usr/sap/{{ sap_sid | upper }}/SYS/exe/uc/linuxx86_64
            SAPSYSTEMNAME:              "{{ sap_sid | upper }}"
          register:                     sapcontrol_results
          failed_when:                  false
          loop:
            - "HAGetFailoverConfig"
            - "HACheckFailoverConfig"
            - "HACheckConfig"
          loop_control:
            loop_var:                    sapcontrol_method

        - name:                         "Test Execution: Validate sapcontrol commands"
          ansible.builtin.set_fact:
            test_execution_end:         "{{ now(utc=true, fmt='%Y-%m-%d %H:%M:%S') }}"
            test_case_message_from_test_case: >-
              Commands executed:
              {% for res in sapcontrol_results.results %}
                - {{ res.sapcontrol_method }}: {{ 'Success' if res.rc == 0 else 'Failed' }}
              {% endfor %}
            test_case_details_from_test_case: "{{
                                                sapcontrol_results.results
                                                | map('dict', {
                                                    'command': item.cmd,
                                                    'returnCode': item.rc,
                                                    'stdout': item.stdout_lines,
                                                    'stderr': item.stderr_lines
                                                  })
                                                | list
                                              }}"

# /*---------------------------------------------------------------------------
# |                          Post Validations                                 |
# +--------------------------------------------------------------------------*/
    - name:                             "Post Validations Tasks"
      ansible.builtin.include_tasks:    "roles/misc/tasks/post-validations.yml"

  rescue:
    - name:                             "Rescue operation"
      ansible.builtin.include_tasks:    "roles/misc/tasks/rescue.yml"

- name:                                 "Pre Validations: Test Case Skipped"
  become:                               true
  when:                                 pre_validations_status == "FAILED"
  block:
    - name:                             "Set test case message and details"
      ansible.builtin.set_fact:
        test_case_message_from_test_case: "Pre Validations for SCS cluster status checks failed. Please check the details."
        test_case_details_from_test_case: {
                                          "Pre Validations: Validate SCS cluster status": "{{ cluster_status_pre }}",
                                        }

    - name:                             "Post Validations Tasks"
      ansible.builtin.include_tasks:    "roles/misc/tasks/post-validations.yml"
